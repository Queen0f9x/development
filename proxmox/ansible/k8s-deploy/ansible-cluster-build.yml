--- 
 #Creates a user named ansible, must be run first before configuring k8s on nodes
- hosts: all
  remote_user: terraform
  become: yes
  tasks:
    - name: create ansible user
      user: 
        name: ansible
        groups: sudo
        append: yes 
        state: present 
        createhome: yes 

    - name: add ansible to sudo
      lineinfile:
        dest: /etc/sudoers
        line: 'ansible ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: ssh key for ansible user
      authorized_key: user=ansible key="{{item}}"
      with_file:
        - ~/.ssh/ansible.pub

    - name: create kube user
      user: 
        name: kube
        groups: sudo
        append: yes 
        state: present 
        createhome: yes 

    - name: add kube to sudo
      lineinfile:
        dest: /etc/sudoers
        line: 'kube ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: ssh key for kube user
      authorized_key: user=kube key="{{item}}"
      with_file:
        - ~/.ssh/kube.pub

 #Begin cluster build here
    - name: disable swap
      shell: |
              sudo swapoff -a
              sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

    - name: create containerd.conf 
      file: 
        path: "/etc/modules-load.d/containerd.conf"
        state: "touch"
    
    - name: Add conf for containerd
      blockinfile:
        path: "/etc/modules-load.d/containerd.conf"
        block: |
               overlay
               br_netfilter
    
    - name: setup modprobe
      shell: |          
              sudo modprobe overlay
              sudo modprobe br_netfilter

    - name: Set system configurations for Kubernetes networking
      file:
        path: "/etc/sysctl.d/kubernetes.conf"
        state: "touch"

    - name: Add conf for containerd
      blockinfile:
        path: "/etc/sysctl.d/kubernetes.conf"
        block: |
                net.bridge.bridge-nf-call-ip6tables = 1
                net.bridge.bridge-nf-call-iptables = 1
                net.ipv4.ip_forward = 1
    
    - name: Apply new settings
      command: sudo sysctl --system
                
    - name: disable interactive mode
      shell: | 
              export DEBIAN_FRONTEND=noninteractive
    
    - name: install APT Transport HTTPS and curl
      apt:
        name: 
          - curl
          - gnupg2
          - software-properties-common
          - apt-transport-https
          - ca-certificates
        state: present
    
    - name: add docker key for repo and dearmour
      shell: |
              sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg

    - name: add docker repo
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu jammy stable
        state: present
    
    - name: Install containerd
      apt:
        name: containerd.io
        state: present
        update_cache: yes
    
    - name: setup systemd cgroup
      shell: |
              containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
              sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
              sudo systemctl restart containerd
              sudo systemctl enable containerd

    - name: add kubernetes key 
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
    
    - name: add kubernetes repo 
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: install kubernetes components
      shell: |
              sudo apt update
              sudo apt install -y kubelet kubeadm kubectl
              sudo apt-mark hold kubelet kubeadm kubectl
...